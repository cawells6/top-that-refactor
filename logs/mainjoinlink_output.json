{"numFailedTestSuites":1,"numFailedTests":3,"numPassedTestSuites":0,"numPassedTests":6,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":9,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1750171664557,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Client Main Script (main.ts) - Join Link Only"],"duration":116,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/workspaces/top-that-refactor/tests/main.joinlink.test.ts:61:87)"],"fullName":"Client Main Script (main.ts) - Join Link Only should handle join link in URL and emit JOIN_GAME","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle join link in URL and emit JOIN_GAME"},{"ancestorTitles":["Client Main Script (main.ts) - Join Link Only"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"Client Main Script (main.ts) - Join Link Only should do nothing if no room param in URL","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should do nothing if no room param in URL"},{"ancestorTitles":["Client Main Script (main.ts) - Join Link Only"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"Client Main Script (main.ts) - Join Link Only should do nothing if room param is empty","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should do nothing if room param is empty"},{"ancestorTitles":["Client Main Script (main.ts) - Join Link Only"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"Client Main Script (main.ts) - Join Link Only should not join if already in-session","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not join if already in-session"},{"ancestorTitles":["Client Main Script (main.ts) - Join Link Only"],"duration":27,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/workspaces/top-that-refactor/tests/main.joinlink.test.ts:123:89)"],"fullName":"Client Main Script (main.ts) - Join Link Only should handle room param with whitespace and special characters","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle room param with whitespace and special characters"},{"ancestorTitles":["Client Main Script (main.ts) - Join Link Only"],"duration":44,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/workspaces/top-that-refactor/tests/main.joinlink.test.ts:138:85)"],"fullName":"Client Main Script (main.ts) - Join Link Only should use first room param if multiple present","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should use first room param if multiple present"},{"ancestorTitles":["Client Main Script (main.ts) - Join Link Only"],"duration":131,"failureDetails":[],"failureMessages":[],"fullName":"Client Main Script (main.ts) - Join Link Only should not throw if DOM is missing elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not throw if DOM is missing elements"},{"ancestorTitles":["Client Main Script (main.ts) - Join Link Only"],"duration":55,"failureDetails":[],"failureMessages":[],"fullName":"Client Main Script (main.ts) - Join Link Only should not throw if socketReady rejects","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not throw if socketReady rejects"},{"ancestorTitles":["Client Main Script (main.ts) - Join Link Only"],"duration":119,"failureDetails":[],"failureMessages":[],"fullName":"Client Main Script (main.ts) - Join Link Only should handle missing DOM gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle missing DOM gracefully"}],"endTime":1750171666183,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mClient Main Script (main.ts) - Join Link Only › should handle join link in URL and emit JOIN_GAME\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 59 |\u001b[39m     \u001b[36mconst\u001b[39m stateModule \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mrequireMock(\u001b[32m'../public/scripts/state.js'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 60 |\u001b[39m     \u001b[90m// Robust: Check that setCurrentRoom and socket.emit were called at least once with expected args\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 61 |\u001b[39m     expect(stateModule\u001b[33m.\u001b[39msetCurrentRoom\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m.\u001b[39msome(call \u001b[33m=>\u001b[39m call[\u001b[35m0\u001b[39m] \u001b[33m===\u001b[39m \u001b[32m'ROOM123'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 62 |\u001b[39m     expect(stateModule\u001b[33m.\u001b[39msocket\u001b[33m.\u001b[39memit\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m.\u001b[39msome(call \u001b[33m=>\u001b[39m call[\u001b[35m1\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mroomId \u001b[33m===\u001b[39m \u001b[32m'ROOM123'\u001b[39m \u001b[33m&&\u001b[39m call[\u001b[35m1\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mplayerName \u001b[33m===\u001b[39m \u001b[32m'Guest'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 63 |\u001b[39m     expect(window\u001b[33m.\u001b[39mlocation\u001b[33m.\u001b[39msearch)\u001b[33m.\u001b[39mtoBe(\u001b[32m''\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 64 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/main.joinlink.test.ts\u001b[39m\u001b[0m\u001b[2m:61:87)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mClient Main Script (main.ts) - Join Link Only › should handle room param with whitespace and special characters\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 121 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 122 |\u001b[39m     \u001b[36mconst\u001b[39m stateModule \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mrequireMock(\u001b[32m'../public/scripts/state.js'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 123 |\u001b[39m     expect(stateModule\u001b[33m.\u001b[39msetCurrentRoom\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m.\u001b[39msome(call \u001b[33m=>\u001b[39m call[\u001b[35m0\u001b[39m] \u001b[33m===\u001b[39m \u001b[32m' ROOM @#$'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 124 |\u001b[39m     expect(stateModule\u001b[33m.\u001b[39msocket\u001b[33m.\u001b[39memit\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m.\u001b[39msome(call \u001b[33m=>\u001b[39m call[\u001b[35m1\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mroomId \u001b[33m===\u001b[39m \u001b[32m' ROOM @#$'\u001b[39m \u001b[33m&&\u001b[39m call[\u001b[35m1\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mplayerName \u001b[33m===\u001b[39m \u001b[32m'Guest'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 125 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 126 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/main.joinlink.test.ts\u001b[39m\u001b[0m\u001b[2m:123:89)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mClient Main Script (main.ts) - Join Link Only › should use first room param if multiple present\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 136 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 137 |\u001b[39m     \u001b[36mconst\u001b[39m stateModule \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mrequireMock(\u001b[32m'../public/scripts/state.js'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 138 |\u001b[39m     expect(stateModule\u001b[33m.\u001b[39msetCurrentRoom\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m.\u001b[39msome(call \u001b[33m=>\u001b[39m call[\u001b[35m0\u001b[39m] \u001b[33m===\u001b[39m \u001b[32m'FIRST'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 139 |\u001b[39m     expect(stateModule\u001b[33m.\u001b[39msocket\u001b[33m.\u001b[39memit\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m.\u001b[39msome(call \u001b[33m=>\u001b[39m call[\u001b[35m1\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mroomId \u001b[33m===\u001b[39m \u001b[32m'FIRST'\u001b[39m \u001b[33m&&\u001b[39m call[\u001b[35m1\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mplayerName \u001b[33m===\u001b[39m \u001b[32m'Guest'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 140 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 141 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/main.joinlink.test.ts\u001b[39m\u001b[0m\u001b[2m:138:85)\u001b[22m\u001b[2m\u001b[22m\n","name":"/workspaces/top-that-refactor/tests/main.joinlink.test.ts","startTime":1750171664989,"status":"failed","summary":""}],"wasInterrupted":false}
