FAIL tests/gameFlow.test.ts
  ‚óè Console

    console.log
      [GameController] Not auto-starting. Deck exists: true, Player count: 1

      at GameController.log [as handleJoin] (controllers/GameController.ts:196:15)

    console.log
      [pushState] Determined currentPlayerId: Player1-ID (type: string)

      at GameController.log [as pushState] (controllers/GameController.ts:367:13)

    console.log
      [pushState] gameState.players: ["Player1-ID"], currentPlayerIndex: 0

      at GameController.log [as pushState] (controllers/GameController.ts:368:13)

    console.log
      --- GameController: pushState ---

      at GameController.log [as pushState] (controllers/GameController.ts:407:13)

    console.log
      [pushState] Value of stateForEmit.currentPlayer before stringify: Player1-ID

      at GameController.log [as pushState] (controllers/GameController.ts:408:13)

    console.log
      ---------------------------------

      at GameController.log [as pushState] (controllers/GameController.ts:409:13)

    console.log
      TEST_DEBUG: All mockIo.emit calls in auto-start test: [
        [
          "player-joined",
          [
            {
              "id": "Player1-ID",
              "name": "Player1"
            }
          ]
        ],
        [
          "lobby",
          {
            "roomId": "game-room",
            "players": [
              {
                "id": "Player1-ID",
                "name": "Player1"
              }
            ],
            "maxPlayers": 4
          }
        ],
        [
          "state-update",
          {
            "players": [
              {
                "id": "Player1-ID",
                "hand": [],
                "upCards": [],
                "downCards": [],
                "name": "Player1"
              }
            ],
            "pile": [],
            "discardCount": 0,
            "deckCount": 0,
            "currentPlayer": "Player1-ID",
            "started": false
          }
        ]
      ]

      at Object.log (tests/gameFlow.test.ts:99:17)

    console.log
      [GameController] Not auto-starting. Deck exists: true, Player count: 1

      at GameController.log [as handleJoin] (controllers/GameController.ts:196:15)

    console.log
      [pushState] Determined currentPlayerId: PlayerA-ID (type: string)

      at GameController.log [as pushState] (controllers/GameController.ts:367:13)

    console.log
      [pushState] gameState.players: ["PlayerA-ID"], currentPlayerIndex: 0

      at GameController.log [as pushState] (controllers/GameController.ts:368:13)

    console.log
      --- GameController: pushState ---

      at GameController.log [as pushState] (controllers/GameController.ts:407:13)

    console.log
      [pushState] Value of stateForEmit.currentPlayer before stringify: PlayerA-ID

      at GameController.log [as pushState] (controllers/GameController.ts:408:13)

    console.log
      ---------------------------------

      at GameController.log [as pushState] (controllers/GameController.ts:409:13)

    console.log
      [GameController] Not auto-starting. Deck exists: true, Player count: 2

      at GameController.log [as handleJoin] (controllers/GameController.ts:196:15)

    console.log
      [pushState] Determined currentPlayerId: PlayerA-ID (type: string)

      at GameController.log [as pushState] (controllers/GameController.ts:367:13)

    console.log
      [pushState] gameState.players: ["PlayerA-ID","PlayerB-ID"], currentPlayerIndex: 0

      at GameController.log [as pushState] (controllers/GameController.ts:368:13)

    console.log
      --- GameController: pushState ---

      at GameController.log [as pushState] (controllers/GameController.ts:407:13)

    console.log
      [pushState] Value of stateForEmit.currentPlayer before stringify: PlayerA-ID

      at GameController.log [as pushState] (controllers/GameController.ts:408:13)

    console.log
      ---------------------------------

      at GameController.log [as pushState] (controllers/GameController.ts:409:13)

    console.log
      --- GameController: handleStartGame --- ENTERED ---

      at GameController.log [as handleStartGame] (controllers/GameController.ts:202:13)

    console.log
      [GameController] About to build deck. Number of players in gameState: 2

      at GameController.log [as handleStartGame] (controllers/GameController.ts:225:13)

    console.log
      --- GameController: handleStartGame --- CARDS ASSIGNED ---

      at GameController.log [as handleStartGame] (controllers/GameController.ts:245:13)

    console.log
      Player PlayerA-ID (PlayerA):

      at log (controllers/GameController.ts:247:15)
          at Map.forEach (<anonymous>)

    console.log
        Hand: 3

      at log (controllers/GameController.ts:248:15)
          at Map.forEach (<anonymous>)

    console.log
        UpCards: 3

      at log (controllers/GameController.ts:249:15)
          at Map.forEach (<anonymous>)

    console.log
        DownCards: 3

      at log (controllers/GameController.ts:250:15)
          at Map.forEach (<anonymous>)

    console.log
      Player PlayerB-ID (PlayerB):

      at log (controllers/GameController.ts:247:15)
          at Map.forEach (<anonymous>)

    console.log
        Hand: 3

      at log (controllers/GameController.ts:248:15)
          at Map.forEach (<anonymous>)

    console.log
        UpCards: 3

      at log (controllers/GameController.ts:249:15)
          at Map.forEach (<anonymous>)

    console.log
        DownCards: 3

      at log (controllers/GameController.ts:250:15)
          at Map.forEach (<anonymous>)

    console.log
      ------------------------------------

      at GameController.log [as handleStartGame] (controllers/GameController.ts:252:13)

    console.log
      [pushState] Determined currentPlayerId: PlayerA-ID (type: string)

      at GameController.log [as pushState] (controllers/GameController.ts:367:13)

    console.log
      [pushState] gameState.players: ["PlayerA-ID","PlayerB-ID"], currentPlayerIndex: 0

      at GameController.log [as pushState] (controllers/GameController.ts:368:13)

    console.log
      --- GameController: pushState ---

      at GameController.log [as pushState] (controllers/GameController.ts:407:13)

    console.log
      [pushState] Value of stateForEmit.currentPlayer before stringify: PlayerA-ID

      at GameController.log [as pushState] (controllers/GameController.ts:408:13)

    console.log
      ---------------------------------

      at GameController.log [as pushState] (controllers/GameController.ts:409:13)

    console.log
      [GameController] Emitting NEXT_TURN for player: PlayerA-ID

      at GameController.log [as handleStartGame] (controllers/GameController.ts:260:13)

  ‚óè Game Flow - Single Player vs CPU (auto-start) ‚Ä∫ Player joins, game auto-starts with 1 CPU, initial state is broadcast

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m  99 |[39m         console[33m.[39mlog([32m'TEST_DEBUG: All mockIo.emit calls in auto-start test:'[39m[33m,[39m [33mJSON[39m[33m.[39mstringify(mockIo[33m.[39memit[33m.[39mmock[33m.[39mcalls[33m,[39m [36mnull[39m[33m,[39m [35m2[39m))[33m;[39m
     [90m 100 |[39m     }
    [31m[1m>[22m[39m[90m 101 |[39m     expect(stateUpdateAfterAutoStart)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                                       [31m[1m^[22m[39m
     [90m 102 |[39m
     [90m 103 |[39m     [90m// Now that we have (presumably) found the state update after game start:[39m
     [90m 104 |[39m     expect(gameController[[32m'gameState'[39m][33m.[39mplayers)[33m.[39mtoContain([32m'COMPUTER_1'[39m)[33m;[39m[0m

      at Object.toBeDefined (tests/gameFlow.test.ts:101:39)

PASS tests/lobbyForm.test.ts
  ‚óè Console

    console.log
      Emitting JOIN_GAME with name: ChrisP, numHumans: 1, numCPUs: 1

      at HTMLFormElement.log (public/scripts/events.js:227:15)

PASS tests/gameState.test.ts
  ‚óè Console

    console.warn
      Max players reached. Cannot add more players.

    [0m [90m 36 |[39m       [36mthis[39m[33m.[39mplayers[33m.[39mpush(playerId)[33m;[39m
     [90m 37 |[39m     } [36melse[39m {
    [31m[1m>[22m[39m[90m 38 |[39m       console[33m.[39mwarn([32m"Max players reached. Cannot add more players."[39m)[33m;[39m
     [90m    |[39m               [31m[1m^[22m[39m
     [90m 39 |[39m       [90m// Potentially throw an error or handle this case as per game rules[39m
     [90m 40 |[39m     }
     [90m 41 |[39m   }[0m

      at GameState.warn [as addPlayer] (models/GameState.ts:38:15)
      at Object.addPlayer (tests/gameState.test.ts:35:8)

PASS tests/cardUtils.test.ts
PASS tests/gameState.deck.test.ts
  ‚óè Console

    console.error
      [GameState.dealCards] CRITICAL: Insufficient cards (2) to deal 9 cards for 1 players with handsize 3. Dealing what's available.

    [0m [90m 141 |[39m     [36mconst[39m requiredCards [33m=[39m numPlayers [33m*[39m handSize [33m*[39m [35m3[39m[33m;[39m
     [90m 142 |[39m     [36mif[39m ([36mthis[39m[33m.[39mdeck[33m.[39mlength [33m<[39m requiredCards) {
    [31m[1m>[22m[39m[90m 143 |[39m         console[33m.[39merror([32m`[GameState.dealCards] CRITICAL: Insufficient cards (${this.deck.length}) to deal ${requiredCards} cards for ${numPlayers} players with handsize ${handSize}. Dealing what's available.`[39m)[33m;[39m
     [90m     |[39m                 [31m[1m^[22m[39m
     [90m 144 |[39m         [90m// Deal what's possible, players might get fewer cards.[39m
     [90m 145 |[39m     }
     [90m 146 |[39m[0m

      at GameState.error [as dealCards] (models/GameState.ts:143:17)
      at Object.dealCards (tests/gameState.deck.test.ts:100:34)

PASS tests/player.test.ts

Test Suites: 1 failed, 5 passed, 6 total
Tests:       1 failed, 56 passed, 57 total
Snapshots:   0 total
Time:        1.41 s
Ran all test suites.
